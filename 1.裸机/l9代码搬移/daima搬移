=============================
一.代码搬移
2440
1.由于垫脚石有4kb，远大于我们自己编写的bootloader，所以往stepping stone里面搬移s多出来的代码到内存中去
2. 起始地址
ARM上电，地址为0x0,6410和210会执行BL1，程序自动运行，把nandflash的数据拷贝到垫脚石
                                   2440    6410             210
 起点  垫脚石                      0x0     0xc000000     (IRAM)0xd0020000
 终点  连接起始地址               0x30080000 

3.链接起始地址：脚本里面所填入的开始地址，第一行代码的地址
  链接地址： 供函数调用指向地址
3.1相对跳转  pc指针+ 开始链接地址到跳转地址的差   b ,bl
3.2绝对跳转  直接给pc指针赋值   函数跳转，ldr pc, =reset
3.3!!!!!!!!!!!上电，pc指针指向0，代码第一行指向链接地址，使用相对跳转，只是还是在steppingstone运行，当合适的时候，就是用绝对跳转，跳转到链接地址相同的地址，也就是内存里面去运行了。
==================================
二.为什么脚本地址要是内存开始地址
1.因为g-boot会有一个跳板，跳到C语言的运行环境
2.c语言需要到内存中去运行
3.把跳板的链接地址赋值给pc指针，正好就在内存里面，跳板前后的链接地址是相连的。
