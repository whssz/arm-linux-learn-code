
gboot.elf:     file format elf32-littlearm

Disassembly of section .text:

30008000 <_start>:
.text 
.global _start
_start:

b   reset
30008000:	ea000018 	b	30008068 <reset>
ldr pc, _undefined_instruction
30008004:	e59ff014 	ldr	pc, [pc, #20]	; 30008020 <_undefined_instruction>
ldr pc, _software_interrupt
30008008:	e59ff014 	ldr	pc, [pc, #20]	; 30008024 <_software_interrupt>
ldr pc, _prefetch_abort
3000800c:	e59ff014 	ldr	pc, [pc, #20]	; 30008028 <_prefetch_abort>
ldr pc, _date_abort
30008010:	e59ff014 	ldr	pc, [pc, #20]	; 3000802c <_date_abort>
ldr pc, _not_used
30008014:	e59ff014 	ldr	pc, [pc, #20]	; 30008030 <_not_used>
ldr pc, _IRQ
30008018:	e59ff014 	ldr	pc, [pc, #20]	; 30008034 <_IRQ>
ldr pc, _FIQ
3000801c:	e59ff014 	ldr	pc, [pc, #20]	; 30008038 <_FIQ>

30008020 <_undefined_instruction>:
30008020:	3000803c 	.word	0x3000803c

30008024 <_software_interrupt>:
30008024:	30008040 	.word	0x30008040

30008028 <_prefetch_abort>:
30008028:	30008044 	.word	0x30008044

3000802c <_date_abort>:
3000802c:	30008048 	.word	0x30008048

30008030 <_not_used>:
30008030:	3000804c 	.word	0x3000804c

30008034 <_IRQ>:
30008034:	30008050 	.word	0x30008050

30008038 <_FIQ>:
30008038:	30008060 	.word	0x30008060

3000803c <undefined_instruction>:
_IRQ :.word IRQ
_FIQ :.word FIQ


undefined_instruction:
	nop	
3000803c:	e1a00000 	nop			(mov r0,r0)

30008040 <software_interrupt>:
software_interrupt:
	nop
30008040:	e1a00000 	nop			(mov r0,r0)

30008044 <prefetch_abort>:
prefetch_abort:
	nop
30008044:	e1a00000 	nop			(mov r0,r0)

30008048 <date_abort>:
date_abort:
	nop
30008048:	e1a00000 	nop			(mov r0,r0)

3000804c <not_used>:
not_used:
	nop
3000804c:	e1a00000 	nop			(mov r0,r0)

30008050 <IRQ>:
IRQ:
	sub lr, lr, #4
30008050:	e24ee004 	sub	lr, lr, #4	; 0x4
	stmfd sp! ,{r0-r12,lr} @保存环境
30008054:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	bl handle_int
30008058:	eb0000f0 	bl	30008420 <handle_int>
	ldmfd sp! ,{r0-r12,pc}^ @返回环境
3000805c:	e8fd9fff 	ldm	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^

30008060 <FIQ>:
FIQ:
	nop
30008060:	e1a00000 	nop			(mov r0,r0)
	bl set_svc
30008064:	eb000008 	bl	3000808c <set_svc>

30008068 <reset>:
reset:
	bl disable_watchdog
30008068:	eb00000c 	bl	300080a0 <disable_watchdog>
	bl disable_interrupt
3000806c:	eb00000f 	bl	300080b0 <disable_interrupt>
	bl disable_mmu
30008070:	eb000012 	bl	300080c0 <disable_mmu>
	bl clock_init
30008074:	eb000016 	bl	300080d4 <clock_init>
	bl init_sdram
30008078:	eb00001f 	bl	300080fc <init_sdram>
	bl copy_to_ram
3000807c:	eb000034 	bl	30008154 <copy_to_ram>
	bl init_stack
30008080:	eb00003b 	bl	30008174 <init_stack>
	bl clean_bss
30008084:	eb00003f 	bl	30008188 <clean_bss>
	ldr pc, =gboot_main
30008088:	e59ff11c 	ldr	pc, [pc, #284]	; 300081ac <loop_clean+0x14>

3000808c <set_svc>:
@	bl light_led
	
set_svc:
	mrs r0, cpsr
3000808c:	e10f0000 	mrs	r0, CPSR
	bic r0, r0,#0x1f
30008090:	e3c0001f 	bic	r0, r0, #31	; 0x1f
	orr r0, r0,#0xd3
30008094:	e38000d3 	orr	r0, r0, #211	; 0xd3
	msr cpsr, r0
30008098:	e129f000 	msr	CPSR_fc, r0
	mov pc, lr
3000809c:	e1a0f00e 	mov	pc, lr

300080a0 <disable_watchdog>:
	
#define pWTCON 0x53000000
disable_watchdog:
	ldr r0, =pWTCON	
300080a0:	e3a00453 	mov	r0, #1392508928	; 0x53000000
	mov r1, #0x0
300080a4:	e3a01000 	mov	r1, #0	; 0x0
	str r1, [r0]
300080a8:	e5801000 	str	r1, [r0]
	mov pc, lr
300080ac:	e1a0f00e 	mov	pc, lr

300080b0 <disable_interrupt>:
	
disable_interrupt:
	mvn r1, #0x0
300080b0:	e3e01000 	mvn	r1, #0	; 0x0
	ldr r0, =0x4a000008
300080b4:	e59f00f4 	ldr	r0, [pc, #244]	; 300081b0 <loop_clean+0x18>
	str r1, [r0]
300080b8:	e5801000 	str	r1, [r0]
	mov pc, lr
300080bc:	e1a0f00e 	mov	pc, lr

300080c0 <disable_mmu>:
	
disable_mmu:
	mcr p15,0,r0,c7,c7,0	
300080c0:	ee070f17 	mcr	15, 0, r0, cr7, cr7, {0}
	mrc p15,0,r0,c1,c0,0
300080c4:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
	bic r0, r0,#0x00000007
300080c8:	e3c00007 	bic	r0, r0, #7	; 0x7
	mcr p15,0,r0,c1,c0,0
300080cc:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
	mov pc, lr
300080d0:	e1a0f00e 	mov	pc, lr

300080d4 <clock_init>:

#define CLKDIVN 0x4C000014
#define MPLLCON 0x4C000004
#define MPLL_405MHZ ((127<<12)|(2<<4)|(1<<0)) 
clock_init:
	ldr r0, =CLKDIVN
300080d4:	e59f00d8 	ldr	r0, [pc, #216]	; 300081b4 <loop_clean+0x1c>
	mov r1, #0x5
300080d8:	e3a01005 	mov	r1, #5	; 0x5
	str r1, [r0]
300080dc:	e5801000 	str	r1, [r0]
	mrc p15,0,r0,c1,c0,0
300080e0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
	orr r0,r0,#0xc0000000
300080e4:	e3800103 	orr	r0, r0, #-1073741824	; 0xc0000000
	mcr p15,0,r0,c1,c0,0
300080e8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
	ldr r0, =MPLLCON
300080ec:	e59f00c4 	ldr	r0, [pc, #196]	; 300081b8 <loop_clean+0x20>
	ldr r1, =MPLL_405MHZ
300080f0:	e59f10c4 	ldr	r1, [pc, #196]	; 300081bc <loop_clean+0x24>
	str r1, [r0]
300080f4:	e5801000 	str	r1, [r0]
	mov pc,lr
300080f8:	e1a0f00e 	mov	pc, lr

300080fc <init_sdram>:

#define mem_contrl 0x48000000
init_sdram:
	ldr  r0, = mem_contrl
300080fc:	e3a00312 	mov	r0, #1207959552	; 0x48000000
	add  r3, r0, #4*13
30008100:	e2803034 	add	r3, r0, #52	; 0x34
   	adrl r1, mem_data
30008104:	e28f1014 	add	r1, pc, #20	; 0x14
30008108:	e1a00000 	nop			(mov r0,r0)
0:
	ldr r2, [r1],#4
3000810c:	e4912004 	ldr	r2, [r1], #4
	str r2, [r0],#4 
30008110:	e4802004 	str	r2, [r0], #4
	cmp r0, r3
30008114:	e1500003 	cmp	r0, r3
	bne 0b
30008118:	1afffffb 	bne	3000810c <init_sdram+0x10>
	mov pc, lr
3000811c:	e1a0f00e 	mov	pc, lr

30008120 <mem_data>:
30008120:	22000000 	.word	0x22000000
30008124:	00000700 	.word	0x00000700
30008128:	00000700 	.word	0x00000700
3000812c:	00000700 	.word	0x00000700
30008130:	00000700 	.word	0x00000700
30008134:	00000700 	.word	0x00000700
30008138:	00000700 	.word	0x00000700
3000813c:	00018001 	.word	0x00018001
30008140:	00018001 	.word	0x00018001
30008144:	008c04f5 	.word	0x008c04f5
30008148:	000000b1 	.word	0x000000b1
3000814c:	00000030 	.word	0x00000030
30008150:	00000030 	.word	0x00000030

30008154 <copy_to_ram>:
  .long	0x000000b1
  .long	0x00000030
  .long	0x00000030

copy_to_ram:
	ldr r0, =0x0
30008154:	e3a00000 	mov	r0, #0	; 0x0
	ldr r1, =0x30008000
30008158:	e59f1060 	ldr	r1, [pc, #96]	; 300081c0 <loop_clean+0x28>
	add r3,r0,#1024*4
3000815c:	e2803a01 	add	r3, r0, #4096	; 0x1000

30008160 <copy_loop>:
copy_loop:
	ldr r2, [r0],#4
30008160:	e4902004 	ldr	r2, [r0], #4
	str r2, [r1],#4
30008164:	e4812004 	str	r2, [r1], #4
	cmp r0, r3
30008168:	e1500003 	cmp	r0, r3
	bne copy_loop
3000816c:	1afffffb 	bne	30008160 <copy_loop>
	mov pc, lr
30008170:	e1a0f00e 	mov	pc, lr

30008174 <init_stack>:
	
init_stack:
	msr cpsr_c, #0xd2
30008174:	e321f0d2 	msr	CPSR_c, #210	; 0xd2
        ldr sp, =0x33000000 @初始化r13_lrq	
30008178:	e3a0d433 	mov	sp, #855638016	; 0x33000000
        msr cpsr_c, #0xd3   	
3000817c:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
	ldr sp, =0x34000000 @初始化r13_svc
30008180:	e3a0d30d 	mov	sp, #872415232	; 0x34000000
 	mov pc, lr
30008184:	e1a0f00e 	mov	pc, lr

30008188 <clean_bss>:
 	
clean_bss:
	ldr r0, =bss_start
30008188:	e59f0034 	ldr	r0, [pc, #52]	; 300081c4 <loop_clean+0x2c>
	ldr r1, =bss_end
3000818c:	e59f1034 	ldr	r1, [pc, #52]	; 300081c8 <loop_clean+0x30>
	cmp r0, r1
30008190:	e1500001 	cmp	r0, r1
	moveq pc, lr
30008194:	01a0f00e 	moveq	pc, lr

30008198 <loop_clean>:
loop_clean:
	mov r2, #0x0
30008198:	e3a02000 	mov	r2, #0	; 0x0
	str r2,[r0],#4
3000819c:	e4802004 	str	r2, [r0], #4
	cmp r0, r1
300081a0:	e1500001 	cmp	r0, r1
	bne loop_clean
300081a4:	1afffffb 	bne	30008198 <loop_clean>
	mov pc, lr
300081a8:	e1a0f00e 	mov	pc, lr
300081ac:	300081cc 	.word	0x300081cc
300081b0:	4a000008 	.word	0x4a000008
300081b4:	4c000014 	.word	0x4c000014
300081b8:	4c000004 	.word	0x4c000004
300081bc:	0007f021 	.word	0x0007f021
300081c0:	30008000 	.word	0x30008000
300081c4:	300084e0 	.word	0x300084e0
300081c8:	300084e0 	.word	0x300084e0

300081cc <gboot_main>:

int gboot_main()
{ 	
300081cc:	e92d4800 	push	{fp, lr}
300081d0:	e28db004 	add	fp, sp, #4	; 0x4
     #ifdef MMU_ON  //如果定义了MMU_ON
     mmu_init();
     #endif

     led_init();
300081d4:	eb000002 	bl	300081e4 <led_init>
       
     button_init();
300081d8:	eb000065 	bl	30008374 <button_init>
     
     irq_init();
300081dc:	eb000079 	bl	300083c8 <irq_init>
300081e0:	eafffffe 	b	300081e0 <gboot_main+0x14>

300081e4 <led_init>:
#define GPBCON (volatile unsigned long*)0x56000010
#define GPBDAT (volatile unsigned long*)0x56000014

void led_init()
{ 
300081e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
300081e8:	e28db000 	add	fp, sp, #0	; 0x0
   *(GPBCON) = 0x400; 
300081ec:	e3a03456 	mov	r3, #1442840576	; 0x56000000
300081f0:	e2833010 	add	r3, r3, #16	; 0x10
300081f4:	e3a02b01 	mov	r2, #1024	; 0x400
300081f8:	e5832000 	str	r2, [r3]
   *(GPBDAT) = 0X7ff; 	
300081fc:	e3a02456 	mov	r2, #1442840576	; 0x56000000
30008200:	e2822014 	add	r2, r2, #20	; 0x14
30008204:	e3a03e7f 	mov	r3, #2032	; 0x7f0
30008208:	e283300f 	add	r3, r3, #15	; 0xf
3000820c:	e5823000 	str	r3, [r2]
}
30008210:	e28bd000 	add	sp, fp, #0	; 0x0
30008214:	e8bd0800 	pop	{fp}
30008218:	e12fff1e 	bx	lr

3000821c <led_on>:


void led_on()
{
3000821c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
30008220:	e28db000 	add	fp, sp, #0	; 0x0
   *(GPBDAT) = 0x0;
30008224:	e3a03456 	mov	r3, #1442840576	; 0x56000000
30008228:	e2833014 	add	r3, r3, #20	; 0x14
3000822c:	e3a02000 	mov	r2, #0	; 0x0
30008230:	e5832000 	str	r2, [r3]
}
30008234:	e28bd000 	add	sp, fp, #0	; 0x0
30008238:	e8bd0800 	pop	{fp}
3000823c:	e12fff1e 	bx	lr

30008240 <led_off>:

void led_off()
{
30008240:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
30008244:	e28db000 	add	fp, sp, #0	; 0x0
   *(GPBDAT) = 0x7ff;	
30008248:	e3a02456 	mov	r2, #1442840576	; 0x56000000
3000824c:	e2822014 	add	r2, r2, #20	; 0x14
30008250:	e3a03e7f 	mov	r3, #2032	; 0x7f0
30008254:	e283300f 	add	r3, r3, #15	; 0xf
30008258:	e5823000 	str	r3, [r2]
}
3000825c:	e28bd000 	add	sp, fp, #0	; 0x0
30008260:	e8bd0800 	pop	{fp}
30008264:	e12fff1e 	bx	lr

30008268 <creat_section_table>:
#define MMU_SECTION   (2)
#define MMU_LED_VP    ( MMU_FULL_ACCESS | MMU_DOMIN | MMU_SPECIAL | MMU_SECTION )
#define MMU_DRAM_VP   ( MMU_FULL_ACCESS | MMU_DOMIN | MMU_SPECIAL | MMU_SECTION | MMU_CACHE | MMU_BUFFER)

void creat_section_table(void)
{
30008268:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
3000826c:	e28db000 	add	fp, sp, #0	; 0x0
30008270:	e24dd014 	sub	sp, sp, #20	; 0x14
    unsigned long vaddr,paddr;
    unsigned long *ttb = (unsigned long *)0x30000000; //表基地址
30008274:	e3a03203 	mov	r3, #805306368	; 0x30000000
30008278:	e50b3008 	str	r3, [fp, #-8]
      
    vaddr = 0xa0000000;  // 虚拟地址
3000827c:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
30008280:	e50b3010 	str	r3, [fp, #-16]
    paddr = 0x56000000; //  物理地址段基地址
30008284:	e3a03456 	mov	r3, #1442840576	; 0x56000000
30008288:	e50b300c 	str	r3, [fp, #-12]
    *(ttb + (vaddr >> 20)) = (paddr & 0xfff00000) | MMU_LED_VP;//在一级表项里面放入所需要的段基地址和段的配置
3000828c:	e51b3010 	ldr	r3, [fp, #-16]
30008290:	e1a03a23 	lsr	r3, r3, #20
30008294:	e1a02103 	lsl	r2, r3, #2
30008298:	e51b3008 	ldr	r3, [fp, #-8]
3000829c:	e0832002 	add	r2, r3, r2
300082a0:	e51b300c 	ldr	r3, [fp, #-12]
300082a4:	e1a03a23 	lsr	r3, r3, #20
300082a8:	e1a03a03 	lsl	r3, r3, #20
300082ac:	e3833ec1 	orr	r3, r3, #3088	; 0xc10
300082b0:	e3833002 	orr	r3, r3, #2	; 0x2
300082b4:	e5823000 	str	r3, [r2]
	
    vaddr = 0x30000000;
300082b8:	e3a03203 	mov	r3, #805306368	; 0x30000000
300082bc:	e50b3010 	str	r3, [fp, #-16]
    paddr = 0x30000000;
300082c0:	e3a03203 	mov	r3, #805306368	; 0x30000000
300082c4:	e50b300c 	str	r3, [fp, #-12]
300082c8:	ea000010 	b	30008310 <creat_section_table+0xa8>
    while(vaddr < 0x34000000)//循环到64M
    {
        *(ttb + (vaddr >> 20)) = (paddr & 0xfff00000) | MMU_DRAM_VP;
300082cc:	e51b3010 	ldr	r3, [fp, #-16]
300082d0:	e1a03a23 	lsr	r3, r3, #20
300082d4:	e1a02103 	lsl	r2, r3, #2
300082d8:	e51b3008 	ldr	r3, [fp, #-8]
300082dc:	e0832002 	add	r2, r3, r2
300082e0:	e51b300c 	ldr	r3, [fp, #-12]
300082e4:	e1a03a23 	lsr	r3, r3, #20
300082e8:	e1a03a03 	lsl	r3, r3, #20
300082ec:	e3833ec1 	orr	r3, r3, #3088	; 0xc10
300082f0:	e383300e 	orr	r3, r3, #14	; 0xe
300082f4:	e5823000 	str	r3, [r2]
        vaddr += 0x100000;  //因为段的单位是1M 
300082f8:	e51b3010 	ldr	r3, [fp, #-16]
300082fc:	e2833601 	add	r3, r3, #1048576	; 0x100000
30008300:	e50b3010 	str	r3, [fp, #-16]
	paddr += 0x100000;
30008304:	e51b300c 	ldr	r3, [fp, #-12]
30008308:	e2833601 	add	r3, r3, #1048576	; 0x100000
3000830c:	e50b300c 	str	r3, [fp, #-12]
    paddr = 0x56000000; //  物理地址段基地址
    *(ttb + (vaddr >> 20)) = (paddr & 0xfff00000) | MMU_LED_VP;//在一级表项里面放入所需要的段基地址和段的配置
	
    vaddr = 0x30000000;
    paddr = 0x30000000;
    while(vaddr < 0x34000000)//循环到64M
30008310:	e51b3010 	ldr	r3, [fp, #-16]
30008314:	e3730373 	cmn	r3, #-872415231	; 0xcc000001
30008318:	9affffeb 	bls	300082cc <creat_section_table+0x64>
    {
        *(ttb + (vaddr >> 20)) = (paddr & 0xfff00000) | MMU_DRAM_VP;
        vaddr += 0x100000;  //因为段的单位是1M 
	paddr += 0x100000;
    }	
}
3000831c:	e28bd000 	add	sp, fp, #0	; 0x0
30008320:	e8bd0800 	pop	{fp}
30008324:	e12fff1e 	bx	lr

30008328 <mmu_enable>:

void mmu_enable()//使能mmu
{
30008328:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
3000832c:	e28db000 	add	fp, sp, #0	; 0x0
     __asm__(
30008330:	e3a00203 	mov	r0, #805306368	; 0x30000000
30008334:	ee020f10 	mcr	15, 0, r0, cr2, cr0, {0}
30008338:	e3e00000 	mvn	r0, #0	; 0x0
3000833c:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
30008340:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
30008344:	e3800001 	orr	r0, r0, #1	; 0x1
30008348:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
     "orr r0, r0, #0x0001\n"
     "mcr p15, 0, r0, c1, c0, 0 \n"    
     :
     :    
   );		
}
3000834c:	e28bd000 	add	sp, fp, #0	; 0x0
30008350:	e8bd0800 	pop	{fp}
30008354:	e12fff1e 	bx	lr

30008358 <mmu_init>:


void mmu_init()
{
30008358:	e92d4800 	push	{fp, lr}
3000835c:	e28db004 	add	fp, sp, #4	; 0x4
   creat_section_table();
30008360:	ebffffc0 	bl	30008268 <creat_section_table>
   
   mmu_enable();
30008364:	ebffffef 	bl	30008328 <mmu_enable>
   
30008368:	e24bd004 	sub	sp, fp, #4	; 0x4
3000836c:	e8bd4800 	pop	{fp, lr}
30008370:	e12fff1e 	bx	lr

30008374 <button_init>:
#define GPI3_INT     (0x2<<(2*3))     
#define GPI5_INT     (0x2<<(2*5)) 
#define GPI6_INT     (0x2<<(2*6))    

void button_init()
{
30008374:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
30008378:	e28db000 	add	fp, sp, #0	; 0x0
  *(GPGCON) &=  ~( GPG0_MSK | GPG3_MSK | GPG5_MSK | GPG6_MSK );
3000837c:	e3a02456 	mov	r2, #1442840576	; 0x56000000
30008380:	e2822060 	add	r2, r2, #96	; 0x60
30008384:	e3a03456 	mov	r3, #1442840576	; 0x56000000
30008388:	e2833060 	add	r3, r3, #96	; 0x60
3000838c:	e5933000 	ldr	r3, [r3]
30008390:	e3c33df3 	bic	r3, r3, #15552	; 0x3cc0
30008394:	e3c33003 	bic	r3, r3, #3	; 0x3
30008398:	e5823000 	str	r3, [r2]
  *(GPGCON) |= GPI0_INT|GPI3_INT|GPI5_INT|GPI6_INT;
3000839c:	e3a02456 	mov	r2, #1442840576	; 0x56000000
300083a0:	e2822060 	add	r2, r2, #96	; 0x60
300083a4:	e3a03456 	mov	r3, #1442840576	; 0x56000000
300083a8:	e2833060 	add	r3, r3, #96	; 0x60
300083ac:	e5933000 	ldr	r3, [r3]
300083b0:	e3833da2 	orr	r3, r3, #10368	; 0x2880
300083b4:	e3833002 	orr	r3, r3, #2	; 0x2
300083b8:	e5823000 	str	r3, [r2]
}
300083bc:	e28bd000 	add	sp, fp, #0	; 0x0
300083c0:	e8bd0800 	pop	{fp}
300083c4:	e12fff1e 	bx	lr

300083c8 <irq_init>:
#define INTPND            (volatile unsigned long *)0x4a000010
#define SRCPND            (volatile unsigned long *)0x4A000000


void irq_init()
{  //配置EINTMASK寄存器
300083c8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
300083cc:	e28db000 	add	fp, sp, #0	; 0x0
   *(EINTMASK) &= (~(1<<8)) & (~(1<<11)) & (~(1<<13)) & (~(1<<14));
300083d0:	e3a02456 	mov	r2, #1442840576	; 0x56000000
300083d4:	e28220a4 	add	r2, r2, #164	; 0xa4
300083d8:	e3a03456 	mov	r3, #1442840576	; 0x56000000
300083dc:	e28330a4 	add	r3, r3, #164	; 0xa4
300083e0:	e5933000 	ldr	r3, [r3]
300083e4:	e3c33c69 	bic	r3, r3, #26880	; 0x6900
300083e8:	e5823000 	str	r3, [r2]
  //配置INT寄存器
   *(INTMSK)   &= ~(1<<5);
300083ec:	e3a0244a 	mov	r2, #1241513984	; 0x4a000000
300083f0:	e2822008 	add	r2, r2, #8	; 0x8
300083f4:	e3a0344a 	mov	r3, #1241513984	; 0x4a000000
300083f8:	e2833008 	add	r3, r3, #8	; 0x8
300083fc:	e5933000 	ldr	r3, [r3]
30008400:	e3c33020 	bic	r3, r3, #32	; 0x20
30008404:	e5823000 	str	r3, [r2]
  //开启中断，在cpsr的c域，第七位 
   __asm__(
30008408:	e10f0000 	mrs	r0, CPSR
3000840c:	e3c00080 	bic	r0, r0, #128	; 0x80
30008410:	e121f000 	msr	CPSR_c, r0
    "bic r0, r0, #0x80\n"   //把第七位置0
    "msr cpsr_c, r0\n"      
    : 
    : 
   );   
}
30008414:	e28bd000 	add	sp, fp, #0	; 0x0
30008418:	e8bd0800 	pop	{fp}
3000841c:	e12fff1e 	bx	lr

30008420 <handle_int>:



void handle_int()
{  //判断中断源
30008420:	e92d4800 	push	{fp, lr}
30008424:	e28db004 	add	fp, sp, #4	; 0x4
30008428:	e24dd010 	sub	sp, sp, #16	; 0x10
   unsigned long value = *(EINTPEND) & ((1<<8)|(1<<11)|(1<<13)|(1<<14));	
3000842c:	e3a03456 	mov	r3, #1442840576	; 0x56000000
30008430:	e28330a8 	add	r3, r3, #168	; 0xa8
30008434:	e5933000 	ldr	r3, [r3]
30008438:	e2033c69 	and	r3, r3, #26880	; 0x6900
3000843c:	e50b3008 	str	r3, [fp, #-8]
   
   switch(value)
30008440:	e51b3008 	ldr	r3, [fp, #-8]
30008444:	e50b3010 	str	r3, [fp, #-16]
30008448:	e51b3010 	ldr	r3, [fp, #-16]
3000844c:	e3530b02 	cmp	r3, #2048	; 0x800
30008450:	0a00000f 	beq	30008494 <handle_int+0x74>
30008454:	e51b3010 	ldr	r3, [fp, #-16]
30008458:	e3530b02 	cmp	r3, #2048	; 0x800
3000845c:	8a000003 	bhi	30008470 <handle_int+0x50>
30008460:	e51b3010 	ldr	r3, [fp, #-16]
30008464:	e3530c01 	cmp	r3, #256	; 0x100
30008468:	0a000007 	beq	3000848c <handle_int+0x6c>
3000846c:	ea00000d 	b	300084a8 <handle_int+0x88>
30008470:	e51b3010 	ldr	r3, [fp, #-16]
30008474:	e3530a02 	cmp	r3, #8192	; 0x2000
30008478:	0a000007 	beq	3000849c <handle_int+0x7c>
3000847c:	e51b3010 	ldr	r3, [fp, #-16]
30008480:	e3530901 	cmp	r3, #16384	; 0x4000
30008484:	0a000006 	beq	300084a4 <handle_int+0x84>
30008488:	ea000006 	b	300084a8 <handle_int+0x88>
   {
       case (1<<8): //k1
       led_on();
3000848c:	ebffff62 	bl	3000821c <led_on>
30008490:	ea000004 	b	300084a8 <handle_int+0x88>
       break;
       
       case (1<<11): //k2
       led_off();
30008494:	ebffff69 	bl	30008240 <led_off>
30008498:	ea000002 	b	300084a8 <handle_int+0x88>
       break;
       
       case (1<<13)://k3
       led_on();
3000849c:	ebffff5e 	bl	3000821c <led_on>
300084a0:	ea000000 	b	300084a8 <handle_int+0x88>
       break;
       
       case(1<<14)://k4
       led_off();
300084a4:	ebffff65 	bl	30008240 <led_off>
       default :
       break;   	 	
    }  
    
    //清除中断标志，在相应位写1   
     *(EINTPEND) = value;
300084a8:	e3a03456 	mov	r3, #1442840576	; 0x56000000
300084ac:	e28330a8 	add	r3, r3, #168	; 0xa8
300084b0:	e51b2008 	ldr	r2, [fp, #-8]
300084b4:	e5832000 	str	r2, [r3]
     
     *(SRCPND) = 1 << 5;
300084b8:	e3a0244a 	mov	r2, #1241513984	; 0x4a000000
300084bc:	e3a03020 	mov	r3, #32	; 0x20
300084c0:	e5823000 	str	r3, [r2]
     *(INTMSK) = 1 << 5;
300084c4:	e3a0344a 	mov	r3, #1241513984	; 0x4a000000
300084c8:	e2833008 	add	r3, r3, #8	; 0x8
300084cc:	e3a02020 	mov	r2, #32	; 0x20
300084d0:	e5832000 	str	r2, [r3]
}
300084d4:	e24bd004 	sub	sp, fp, #4	; 0x4
300084d8:	e8bd4800 	pop	{fp, lr}
300084dc:	e12fff1e 	bx	lr
Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002541 	andeq	r2, r0, r1, asr #10
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000001b 	andeq	r0, r0, fp, lsl r0
  10:	00543405 	subseq	r3, r4, r5, lsl #8
  14:	01080206 	tsteq	r8, r6, lsl #4
  18:	01140412 	tsteq	r4, r2, lsl r4
  1c:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  20:	01190118 	tsteq	r9, r8, lsl r1
  24:	Address 0x00000024 is out of bounds.

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000008b 	andeq	r0, r0, fp, lsl #1
   4:	001e0002 	andseq	r0, lr, r2
   8:	01020000 	tsteq	r2, r0
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	tsteq	r0, r0
  18:	00010000 	andeq	r0, r1, r0
  1c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  20:	00532e74 	subseq	r2, r3, r4, ror lr
  24:	00000000 	andeq	r0, r0, r0
  28:	00020500 	andeq	r0, r2, r0, lsl #10
  2c:	16300080 	ldrtne	r0, [r0], -r0, lsl #1
  30:	2f2f2f2f 	svccs	0x002f2f2f
  34:	032f2f2f 	teqeq	pc, #188	; 0xbc
  38:	3030f20d 	eorscc	pc, r0, sp, lsl #4
  3c:	2f303030 	svccs	0x00303030
  40:	2f302f2f 	svccs	0x00302f2f
  44:	2f2f2f30 	svccs	0x002f2f30
  48:	2f2f2f2f 	svccs	0x002f2f2f
  4c:	2f2f322f 	svccs	0x002f322f
  50:	2f322f2f 	svccs	0x00322f2f
  54:	2f312f2f 	svccs	0x00312f2f
  58:	2f312f2f 	svccs	0x00312f2f
  5c:	342f2f2f 	strtcc	r2, [pc], #3887	; 64 <_start-0x30007f9c>
  60:	2f2f2f2f 	svccs	0x002f2f2f
  64:	2f2f2f2f 	svccs	0x002f2f2f
  68:	2f2f322f 	svccs	0x002f322f
  6c:	2f2f2f4c 	svccs	0x002f2f4c
  70:	0812032f 	ldmdaeq	r2, {r0, r1, r2, r3, r5, r8, r9}
  74:	302f2fac 	eorcc	r2, pc, ip, lsr #31
  78:	2f2f2f2f 	svccs	0x002f2f2f
  7c:	2f2f2f31 	svccs	0x002f2f31
  80:	2f2f312f 	svccs	0x002f312f
  84:	2f2f302f 	svccs	0x002f302f
  88:	12022f2f 	andne	r2, r2, #188	; 0xbc
  8c:	33010100 	movwcc	r0, #4352	; 0x1100
  90:	02000000 	andeq	r0, r0, #0	; 0x0
  94:	00001d00 	andeq	r1, r0, r0, lsl #26
  98:	fb010200 	blx	408a2 <_start-0x2ffc775e>
  9c:	01000d0e 	tsteq	r0, lr, lsl #26
  a0:	00010101 	andeq	r0, r1, r1, lsl #2
  a4:	00010000 	andeq	r0, r1, r0
  a8:	6d000100 	stfvss	f0, [r0]
  ac:	2e6e6961 	cdpcs	9, 6, cr6, cr14, cr1, {3}
  b0:	00000063 	andeq	r0, r0, r3, rrx
  b4:	05000000 	streq	r0, [r0]
  b8:	0081cc02 	addeq	ip, r1, r2, lsl #24
  bc:	304f1430 	subcc	r1, pc, r0, lsr r4
  c0:	00040230 	andeq	r0, r4, r0, lsr r2
  c4:	00380101 	eorseq	r0, r8, r1, lsl #2
  c8:	00020000 	andeq	r0, r2, r0
  cc:	0000001c 	andeq	r0, r0, ip, lsl r0
  d0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
  d4:	0101000d 	tsteq	r1, sp
  d8:	00000101 	andeq	r0, r0, r1, lsl #2
  dc:	00000100 	andeq	r0, r0, r0, lsl #2
  e0:	656c0001 	strbvs	r0, [ip, #-1]!
  e4:	00632e64 	rsbeq	r2, r3, r4, ror #28
  e8:	00000000 	andeq	r0, r0, r0
  ec:	e4020500 	str	r0, [r2], #-1280
  f0:	16300081 	ldrtne	r0, [r0], -r1, lsl #1
  f4:	6a9f834b 	bvs	fe7e0e28 <bss_end+0xce7d8948>
  f8:	4b69834b 	blmi	1a60e2c <_start-0x2e5a71d4>
  fc:	0006029f 	muleq	r6, pc, r2
 100:	00470101 	subeq	r0, r7, r1, lsl #2
 104:	00020000 	andeq	r0, r2, r0
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 110:	0101000d 	tsteq	r1, sp
 114:	00000101 	andeq	r0, r0, r1, lsl #2
 118:	00000100 	andeq	r0, r0, r0, lsl #2
 11c:	6d6d0001 	stclvs	0, cr0, [sp, #-4]!
 120:	00632e75 	rsbeq	r2, r3, r5, ror lr
 124:	00000000 	andeq	r0, r0, r0
 128:	68020500 	stmdavs	r2, {r8, sl}
 12c:	03300082 	teqeq	r0, #130	; 0x82
 130:	4c68010a 	stfmie	f0, [r8], #-40
 134:	5a084b4b 	bpl	212e68 <_start-0x2fdf5198>
 138:	5908694b 	stmdbpl	r8, {r0, r1, r3, r6, r8, fp, sp, lr}
 13c:	696c6267 	stmdbvs	ip!, {r0, r1, r2, r5, r6, r9, sp, lr}^
 140:	d60e034b 	strle	r0, [lr], -fp, asr #6
 144:	30304b6a 	eorscc	r4, r0, sl, ror #22
 148:	01000602 	tsteq	r0, r2, lsl #12
 14c:	00003701 	andeq	r3, r0, r1, lsl #14
 150:	1f000200 	svcne	0x00000200
 154:	02000000 	andeq	r0, r0, #0	; 0x0
 158:	0d0efb01 	vstreq	d15, [lr, #-4]
 15c:	01010100 	tsteq	r1, r0, lsl #2
 160:	00000001 	andeq	r0, r0, r1
 164:	01000001 	tsteq	r0, r1
 168:	74756200 	ldrbtvc	r6, [r5], #-512
 16c:	2e6e6f74 	mcrcs	15, 3, r6, cr14, cr4, {3}
 170:	00000063 	andeq	r0, r0, r3, rrx
 174:	05000000 	streq	r0, [r0]
 178:	00837402 	addeq	r7, r3, r2, lsl #8
 17c:	010d0330 	tsteq	sp, r0, lsr r3
 180:	02f3f34b 	rscseq	pc, r3, #738197505	; 0x2c000001
 184:	01010006 	tsteq	r1, r6
 188:	00000048 	andeq	r0, r0, r8, asr #32
 18c:	00220002 	eoreq	r0, r2, r2
 190:	01020000 	tsteq	r2, r0
 194:	000d0efb 	strdeq	r0, [sp], -fp
 198:	01010101 	tsteq	r1, r1, lsl #2
 19c:	01000000 	tsteq	r0, r0
 1a0:	00010000 	andeq	r0, r1, r0
 1a4:	65746e69 	ldrbvs	r6, [r4, #-3689]!
 1a8:	70757272 	rsbsvc	r7, r5, r2, ror r2
 1ac:	00632e74 	rsbeq	r2, r3, r4, ror lr
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	c8020500 	stmdagt	r2, {r8, sl}
 1b8:	03300083 	teqeq	r0, #131	; 0x83
 1bc:	d84b0109 	stmdale	fp, {r0, r3, r8}^
 1c0:	676b6dd8 	undefined
 1c4:	152602a0 	strne	r0, [r6, #-672]!
 1c8:	364e4e4e 	strbcc	r4, [lr], -lr, asr #28
 1cc:	02836784 	addeq	r6, r3, #34603008	; 0x2100000
 1d0:	01010006 	tsteq	r1, r6
Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000047 	andeq	r0, r0, r7, asr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	01040000 	tsteq	r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	30008000 	andcc	r8, r0, r0
  14:	300081cc 	andcc	r8, r0, ip, asr #3
  18:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  1c:	00532e74 	subseq	r2, r3, r4, ror lr
  20:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!
  24:	33532f65 	cmpcc	r3, #404	; 0x194
  28:	4d52412d 	ldfmie	f4, [r2, #-180]
  2c:	32316c2f 	eorscc	r6, r1, #12032	; 0x2f00
  30:	65746e69 	ldrbvs	r6, [r4, #-3689]!
  34:	70757272 	rsbsvc	r7, r5, r2, ror r2
  38:	4e470074 	mcrmi	0, 2, r0, cr7, cr4, {3}
  3c:	53412055 	movtpl	r2, #4181	; 0x1055
  40:	312e3220 	teqcc	lr, r0, lsr #4
  44:	30352e38 	eorscc	r2, r5, r8, lsr lr
  48:	41800100 	orrmi	r0, r0, r0, lsl #2
  4c:	02000000 	andeq	r0, r0, #0	; 0x0
  50:	00001400 	andeq	r1, r0, r0, lsl #8
  54:	00010400 	andeq	r0, r1, r0, lsl #8
  58:	01000000 	tsteq	r0, r0
  5c:	00000026 	andeq	r0, r0, r6, lsr #32
  60:	0000000c 	andeq	r0, r0, ip
  64:	300081cc 	andcc	r8, r0, ip, asr #3
  68:	300081e4 	andcc	r8, r0, r4, ror #3
  6c:	0000008f 	andeq	r0, r0, pc, lsl #1
  70:	002d0102 	eoreq	r0, sp, r2, lsl #2
  74:	03010000 	movweq	r0, #4096	; 0x1000
  78:	0000003d 	andeq	r0, r0, sp, lsr r0
  7c:	300081cc 	andcc	r8, r0, ip, asr #3
  80:	300081e4 	andcc	r8, r0, r4, ror #3
  84:	00000000 	andeq	r0, r0, r0
  88:	69050403 	stmdbvs	r5, {r0, r1, sl}
  8c:	0000746e 	andeq	r7, r0, lr, ror #8
  90:	0000005e 	andeq	r0, r0, lr, asr r0
  94:	00480002 	subeq	r0, r8, r2
  98:	01040000 	tsteq	r4, r0
  9c:	00000000 	andeq	r0, r0, r0
  a0:	00004901 	andeq	r4, r0, r1, lsl #18
  a4:	00000c00 	andeq	r0, r0, r0, lsl #24
  a8:	0081e400 	addeq	lr, r1, r0, lsl #8
  ac:	00826830 	addeq	r6, r2, r0, lsr r8
  b0:	0000c630 	andeq	ip, r0, r0, lsr r6
  b4:	38010200 	stmdacc	r1, {r9}
  b8:	01000000 	tsteq	r0, r0
  bc:	0081e405 	addeq	lr, r1, r5, lsl #8
  c0:	00821c30 	addeq	r1, r2, r0, lsr ip
  c4:	00002b30 	andeq	r2, r0, r0, lsr fp
  c8:	4f010200 	svcmi	0x00010200
  cc:	01000000 	tsteq	r0, r0
  d0:	00821c0c 	addeq	r1, r2, ip, lsl #24
  d4:	00824030 	addeq	r4, r2, r0, lsr r0
  d8:	00005630 	andeq	r5, r0, r0, lsr r6
  dc:	41010200 	tstmi	r1, r0, lsl #4
  e0:	01000000 	tsteq	r0, r0
  e4:	00824011 	addeq	r4, r2, r1, lsl r0
  e8:	00826830 	addeq	r6, r2, r0, lsr r8
  ec:	00008130 	andeq	r8, r0, r0, lsr r1
  f0:	009b0000 	addseq	r0, fp, r0
  f4:	00020000 	andeq	r0, r2, r0
  f8:	0000006f 	andeq	r0, r0, pc, rrx
  fc:	00000104 	andeq	r0, r0, r4, lsl #2
 100:	56010000 	strpl	r0, [r1], -r0
 104:	0c000000 	stceq	0, cr0, [r0], {0}
 108:	68000000 	stmdavs	r0, {}
 10c:	74300082 	ldrtvc	r0, [r0], #-130
 110:	02300083 	eorseq	r0, r0, #131	; 0x83
 114:	02000001 	andeq	r0, r0, #1	; 0x1
 118:	00006501 	andeq	r6, r0, r1, lsl #10
 11c:	010b0100 	tsteq	fp, r0, lsl #2
 120:	30008268 	andcc	r8, r0, r8, ror #4
 124:	30008328 	andcc	r8, r0, r8, lsr #6
 128:	000000ac 	andeq	r0, r0, ip, lsr #1
 12c:	00000069 	andeq	r0, r0, r9, rrx
 130:	00009103 	andeq	r9, r0, r3, lsl #2
 134:	690c0100 	stmdbvs	ip, {r8}
 138:	02000000 	andeq	r0, r0, #0	; 0x0
 13c:	8b036c91 	blhi	db388 <_start-0x2ff2cc78>
 140:	01000000 	tsteq	r0, r0
 144:	0000690c 	andeq	r6, r0, ip, lsl #18
 148:	70910200 	addsvc	r0, r1, r0, lsl #4
 14c:	62747404 	rsbsvs	r7, r4, #67108864	; 0x4000000
 150:	700d0100 	andvc	r0, sp, r0, lsl #2
 154:	02000000 	andeq	r0, r0, #0	; 0x0
 158:	05007491 	streq	r7, [r0, #-1169]
 15c:	00790704 	rsbseq	r0, r9, r4, lsl #14
 160:	04060000 	streq	r0, [r6]
 164:	00000069 	andeq	r0, r0, r9, rrx
 168:	00970107 	addseq	r0, r7, r7, lsl #2
 16c:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
 170:	30008328 	andcc	r8, r0, r8, lsr #6
 174:	30008358 	andcc	r8, r0, r8, asr r3
 178:	000000d7 	ldrdeq	r0, [r0], -r7
 17c:	005c0107 	subseq	r0, ip, r7, lsl #2
 180:	31010000 	tstcc	r1, r0
 184:	30008358 	andcc	r8, r0, r8, asr r3
 188:	30008374 	andcc	r8, r0, r4, ror r3
 18c:	00000102 	andeq	r0, r0, r2, lsl #2
 190:	00003600 	andeq	r3, r0, r0, lsl #12
 194:	df000200 	svcle	0x00000200
 198:	04000000 	streq	r0, [r0]
 19c:	00000001 	andeq	r0, r0, r1
 1a0:	00ae0100 	adceq	r0, lr, r0, lsl #2
 1a4:	000c0000 	andeq	r0, ip, r0
 1a8:	83740000 	cmnhi	r4, #0	; 0x0
 1ac:	83c83000 	bichi	r3, r8, #0	; 0x0
 1b0:	014d3000 	cmpeq	sp, r0
 1b4:	01020000 	tsteq	r2, r0
 1b8:	000000a2 	andeq	r0, r0, r2, lsr #1
 1bc:	83740e01 	cmnhi	r4, #16	; 0x10
 1c0:	83c83000 	bichi	r3, r8, #0	; 0x0
 1c4:	012d3000 	teqeq	sp, r0
 1c8:	64000000 	strvs	r0, [r0]
 1cc:	02000000 	andeq	r0, r0, #0	; 0x0
 1d0:	00010600 	andeq	r0, r1, r0, lsl #12
 1d4:	00010400 	andeq	r0, r1, r0, lsl #8
 1d8:	01000000 	tsteq	r0, r0
 1dc:	000000b7 	strheq	r0, [r0], -r7
 1e0:	0000000c 	andeq	r0, r0, ip
 1e4:	300083c8 	andcc	r8, r0, r8, asr #7
 1e8:	300084e0 	andcc	r8, r0, r0, ror #9
 1ec:	00000188 	andeq	r0, r0, r8, lsl #3
 1f0:	00d40102 	sbcseq	r0, r4, r2, lsl #2
 1f4:	0a010000 	beq	401fc <_start-0x2ffc7e04>
 1f8:	300083c8 	andcc	r8, r0, r8, asr #7
 1fc:	30008420 	andcc	r8, r0, r0, lsr #8
 200:	00000158 	andeq	r0, r0, r8, asr r1
 204:	00c90103 	sbceq	r0, r9, r3, lsl #2
 208:	1b010000 	blne	40210 <_start-0x2ffc7df0>
 20c:	30008420 	andcc	r8, r0, r0, lsr #8
 210:	300084e0 	andcc	r8, r0, r0, ror #9
 214:	00000183 	andeq	r0, r0, r3, lsl #3
 218:	00000060 	andeq	r0, r0, r0, rrx
 21c:	0000c304 	andeq	ip, r0, r4, lsl #6
 220:	601c0100 	andsvs	r0, ip, r0, lsl #2
 224:	02000000 	andeq	r0, r0, #0	; 0x0
 228:	05007491 	streq	r7, [r0, #-1169]
 22c:	00790704 	rsbseq	r0, r9, r4, lsl #14
 230:	Address 0x00000230 is out of bounds.

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	10001101 	andne	r1, r0, r1, lsl #2
   4:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
   8:	1b080301 	blne	200c14 <_start-0x2fe073ec>
   c:	13082508 	movwne	r2, #34056	; 0x8508
  10:	00000005 	andeq	r0, r0, r5
  14:	25011101 	strcs	r1, [r1, #-257]
  18:	030b130e 	movweq	r1, #45838	; 0xb30e
  1c:	110e1b0e 	tstne	lr, lr, lsl #22
  20:	10011201 	andne	r1, r1, r1, lsl #4
  24:	02000006 	andeq	r0, r0, #6	; 0x6
  28:	0c3f002e 	ldceq	0, cr0, [pc], #-184
  2c:	0b3a0e03 	bleq	e83840 <_start-0x2f1847c0>
  30:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  34:	01120111 	tsteq	r2, r1, lsl r1
  38:	00000640 	andeq	r0, r0, r0, asr #12
  3c:	0b002403 	bleq	9050 <_start-0x2fffefb0>
  40:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  44:	00000008 	andeq	r0, r0, r8
  48:	25011101 	strcs	r1, [r1, #-257]
  4c:	030b130e 	movweq	r1, #45838	; 0xb30e
  50:	110e1b0e 	tstne	lr, lr, lsl #22
  54:	10011201 	andne	r1, r1, r1, lsl #4
  58:	02000006 	andeq	r0, r0, #6	; 0x6
  5c:	0c3f002e 	ldceq	0, cr0, [pc], #-184
  60:	0b3a0e03 	bleq	e83874 <_start-0x2f18478c>
  64:	01110b3b 	tsteq	r1, fp, lsr fp
  68:	06400112 	undefined
  6c:	01000000 	tsteq	r0, r0
  70:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
  74:	0e030b13 	vmoveq.32	d3[0], r0
  78:	01110e1b 	tsteq	r1, fp, lsl lr
  7c:	06100112 	undefined
  80:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
  84:	030c3f01 	movweq	r3, #52993	; 0xcf01
  88:	3b0b3a0e 	blcc	2ce8c8 <_start-0x2fd39738>
  8c:	110c270b 	tstne	ip, fp, lsl #14
  90:	40011201 	andmi	r1, r1, r1, lsl #4
  94:	00130106 	andseq	r0, r3, r6, lsl #2
  98:	00340300 	eorseq	r0, r4, r0, lsl #6
  9c:	0b3a0e03 	bleq	e838b0 <_start-0x2f184750>
  a0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  a4:	00000a02 	andeq	r0, r0, r2, lsl #20
  a8:	03003404 	movweq	r3, #1028	; 0x404
  ac:	3b0b3a08 	blcc	2ce8d4 <_start-0x2fd3972c>
  b0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  b4:	0500000a 	streq	r0, [r0, #-10]
  b8:	0b0b0024 	bleq	2c0150 <_start-0x2fd47eb0>
  bc:	0e030b3e 	vmoveq.16	d3[0], r0
  c0:	0f060000 	svceq	0x00060000
  c4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
  c8:	07000013 	smladeq	r0, r3, r0, r0
  cc:	0c3f002e 	ldceq	0, cr0, [pc], #-184
  d0:	0b3a0e03 	bleq	e838e4 <_start-0x2f18471c>
  d4:	01110b3b 	tsteq	r1, fp, lsr fp
  d8:	06400112 	undefined
  dc:	01000000 	tsteq	r0, r0
  e0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
  e4:	0e030b13 	vmoveq.32	d3[0], r0
  e8:	01110e1b 	tsteq	r1, fp, lsl lr
  ec:	06100112 	undefined
  f0:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
  f4:	030c3f00 	movweq	r3, #52992	; 0xcf00
  f8:	3b0b3a0e 	blcc	2ce938 <_start-0x2fd396c8>
  fc:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
 100:	00064001 	andeq	r4, r6, r1
 104:	11010000 	tstne	r1, r0
 108:	130e2501 	movwne	r2, #58625	; 0xe501
 10c:	1b0e030b 	blne	380d40 <_start-0x2fc872c0>
 110:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 114:	00061001 	andeq	r1, r6, r1
 118:	002e0200 	eoreq	r0, lr, r0, lsl #4
 11c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 120:	0b3b0b3a 	bleq	ec2e10 <_start-0x2f1451f0>
 124:	01120111 	tsteq	r2, r1, lsl r1
 128:	00000640 	andeq	r0, r0, r0, asr #12
 12c:	3f012e03 	svccc	0x00012e03
 130:	3a0e030c 	bcc	380d68 <_start-0x2fc87298>
 134:	110b3b0b 	tstne	fp, fp, lsl #22
 138:	40011201 	andmi	r1, r1, r1, lsl #4
 13c:	00130106 	andseq	r0, r3, r6, lsl #2
 140:	00340400 	eorseq	r0, r4, r0, lsl #8
 144:	0b3a0e03 	bleq	e83958 <_start-0x2f1846a8>
 148:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 14c:	00000a02 	andeq	r0, r0, r2, lsl #20
 150:	0b002405 	bleq	916c <_start-0x2fffee94>
 154:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 158:	0000000e 	andeq	r0, r0, lr
Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	30008000 	andcc	r8, r0, r0
  14:	000001cc 	andeq	r0, r0, ip, asr #3
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	004b0002 	subeq	r0, fp, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	300081cc 	andcc	r8, r0, ip, asr #3
  34:	00000018 	andeq	r0, r0, r8, lsl r0
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	00900002 	addseq	r0, r0, r2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	300081e4 	andcc	r8, r0, r4, ror #3
  54:	00000084 	andeq	r0, r0, r4, lsl #1
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	00f20002 	rscseq	r0, r2, r2
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	30008268 	andcc	r8, r0, r8, ror #4
  74:	0000010c 	andeq	r0, r0, ip, lsl #2
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	01910002 	orrseq	r0, r1, r2
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	30008374 	andcc	r8, r0, r4, ror r3
  94:	00000054 	andeq	r0, r0, r4, asr r0
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	01cb0002 	biceq	r0, fp, r2
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	300083c8 	andcc	r8, r0, r8, asr #7
  b4:	00000118 	andeq	r0, r0, r8, lsl r1
	...
Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	.word	0x0000000c
   4:	ffffffff 	.word	0xffffffff
   8:	7c010001 	.word	0x7c010001
   c:	000d0c0e 	.word	0x000d0c0e
  10:	00000018 	.word	0x00000018
  14:	00000000 	.word	0x00000000
  18:	300081cc 	.word	0x300081cc
  1c:	00000018 	.word	0x00000018
  20:	8e080e44 	.word	0x8e080e44
  24:	44028b01 	.word	0x44028b01
  28:	0b0c      	.short	0x0b0c
  2a:	04          	.byte	0x04
  2b:	00          	.byte	0x00
  2c:	0000000c 	.word	0x0000000c
  30:	ffffffff 	.word	0xffffffff
  34:	7c010001 	.word	0x7c010001
  38:	000d0c0e 	.word	0x000d0c0e
  3c:	00000014 	.word	0x00000014
  40:	0000002c 	.word	0x0000002c
  44:	300081e4 	.word	0x300081e4
  48:	00000038 	.word	0x00000038
  4c:	8b040e44 	.word	0x8b040e44
  50:	0b0d4401 	.word	0x0b0d4401
  54:	00000014 	.word	0x00000014
  58:	0000002c 	.word	0x0000002c
  5c:	3000821c 	.word	0x3000821c
  60:	00000024 	.word	0x00000024
  64:	8b040e44 	.word	0x8b040e44
  68:	0b0d4401 	.word	0x0b0d4401
  6c:	00000014 	.word	0x00000014
  70:	0000002c 	.word	0x0000002c
  74:	30008240 	.word	0x30008240
  78:	00000028 	.word	0x00000028
  7c:	8b040e44 	.word	0x8b040e44
  80:	0b0d4401 	.word	0x0b0d4401
  84:	0000000c 	.word	0x0000000c
  88:	ffffffff 	.word	0xffffffff
  8c:	7c010001 	.word	0x7c010001
  90:	000d0c0e 	.word	0x000d0c0e
  94:	00000014 	.word	0x00000014
  98:	00000084 	.word	0x00000084
  9c:	30008268 	.word	0x30008268
  a0:	000000c0 	.word	0x000000c0
  a4:	8b040e44 	.word	0x8b040e44
  a8:	0b0d4401 	.word	0x0b0d4401
  ac:	00000014 	.word	0x00000014
  b0:	00000084 	.word	0x00000084
  b4:	30008328 	.word	0x30008328
  b8:	00000030 	.word	0x00000030
  bc:	8b040e44 	.word	0x8b040e44
  c0:	0b0d4401 	.word	0x0b0d4401
  c4:	00000018 	.word	0x00000018
  c8:	00000084 	.word	0x00000084
  cc:	30008358 	.word	0x30008358
  d0:	0000001c 	.word	0x0000001c
  d4:	8e080e44 	.word	0x8e080e44
  d8:	44028b01 	.word	0x44028b01
  dc:	00040b0c 	.word	0x00040b0c
  e0:	0000000c 	.word	0x0000000c
  e4:	ffffffff 	.word	0xffffffff
  e8:	7c010001 	.word	0x7c010001
  ec:	000d0c0e 	.word	0x000d0c0e
  f0:	00000014 	.word	0x00000014
  f4:	000000e0 	.word	0x000000e0
  f8:	30008374 	.word	0x30008374
  fc:	00000054 	.word	0x00000054
 100:	8b040e44 	.word	0x8b040e44
 104:	0b0d4401 	.word	0x0b0d4401
 108:	0000000c 	.word	0x0000000c
 10c:	ffffffff 	.word	0xffffffff
 110:	7c010001 	.word	0x7c010001
 114:	000d0c0e 	.word	0x000d0c0e
 118:	00000014 	.word	0x00000014
 11c:	00000108 	.word	0x00000108
 120:	300083c8 	.word	0x300083c8
 124:	00000058 	.word	0x00000058
 128:	8b040e44 	.word	0x8b040e44
 12c:	01          	.byte	0x01
 12d:	44          	.byte	0x44
 12e:	0b0d      	.short	0x0b0d
 130:	00000018 	.word	0x00000018
 134:	00000108 	.word	0x00000108
 138:	30008420 	.word	0x30008420
 13c:	000000c0 	.word	0x000000c0
 140:	8e080e44 	.word	0x8e080e44
 144:	44028b01 	.word	0x44028b01
 148:	00040b0c 	.word	0x00040b0c
Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00000000 	.word	0x00000000
   4:	00000004 	.word	0x00000004
   8:	045d0001 	.word	0x045d0001
   c:	08000000 	.word	0x08000000
  10:	02000000 	.word	0x02000000
  14:	08087d00 	.word	0x08087d00
  18:	18000000 	.word	0x18000000
  1c:	02000000 	.word	0x02000000
  20:	00047b00 	.word	0x00047b00
	...
  2c:	04000000 	.word	0x04000000
  30:	01000000 	.word	0x01000000
  34:	00045d00 	.word	0x00045d00
  38:	00080000 	.word	0x00080000
  3c:	00020000 	.word	0x00020000
  40:	0008047d 	.word	0x0008047d
  44:	00380000 	.word	0x00380000
  48:	00020000 	.word	0x00020000
  4c:	0000047b 	.word	0x0000047b
  50:	00000000 	.word	0x00000000
  54:	00380000 	.word	0x00380000
  58:	003c0000 	.word	0x003c0000
  5c:	00010000 	.word	0x00010000
  60:	00003c5d 	.word	0x00003c5d
  64:	00004000 	.word	0x00004000
  68:	7d000200 	.word	0x7d000200
  6c:	00004004 	.word	0x00004004
  70:	00005c00 	.word	0x00005c00
  74:	7b000200 	.word	0x7b000200
  78:	00000004 	.word	0x00000004
  7c:	00000000 	.word	0x00000000
  80:	00005c00 	.word	0x00005c00
  84:	00006000 	.word	0x00006000
  88:	5d000100 	.word	0x5d000100
  8c:	00000060 	.word	0x00000060
  90:	00000064 	.word	0x00000064
  94:	047d0002 	.word	0x047d0002
  98:	00000064 	.word	0x00000064
  9c:	00000084 	.word	0x00000084
  a0:	047b0002 	.word	0x047b0002
	...
  b0:	00000004 	.word	0x00000004
  b4:	045d0001 	.word	0x045d0001
  b8:	08000000 	.word	0x08000000
  bc:	02000000 	.word	0x02000000
  c0:	08047d00 	.word	0x08047d00
  c4:	c0000000 	.word	0xc0000000
  c8:	02000000 	.word	0x02000000
  cc:	00047b00 	.word	0x00047b00
  d0:	00000000 	.word	0x00000000
  d4:	c0000000 	.word	0xc0000000
  d8:	c4000000 	.word	0xc4000000
  dc:	01000000 	.word	0x01000000
  e0:	00c45d00 	.word	0x00c45d00
  e4:	00c80000 	.word	0x00c80000
  e8:	00020000 	.word	0x00020000
  ec:	00c8047d 	.word	0x00c8047d
  f0:	00f00000 	.word	0x00f00000
  f4:	00020000 	.word	0x00020000
  f8:	0000047b 	.word	0x0000047b
  fc:	00000000 	.word	0x00000000
 100:	00f00000 	.word	0x00f00000
 104:	00f40000 	.word	0x00f40000
 108:	00010000 	.word	0x00010000
 10c:	0000f45d 	.word	0x0000f45d
 110:	0000f800 	.word	0x0000f800
 114:	7d000200 	.word	0x7d000200
 118:	0000f808 	.word	0x0000f808
 11c:	00010c00 	.word	0x00010c00
 120:	7b000200 	.word	0x7b000200
 124:	00000004 	.word	0x00000004
	...
 130:	00000400 	.word	0x00000400
 134:	5d000100 	.word	0x5d000100
 138:	00000004 	.word	0x00000004
 13c:	00000008 	.word	0x00000008
 140:	047d0002 	.word	0x047d0002
 144:	00000008 	.word	0x00000008
 148:	00000054 	.word	0x00000054
 14c:	047b0002 	.word	0x047b0002
	...
 15c:	00000004 	.word	0x00000004
 160:	045d0001 	.word	0x045d0001
 164:	08000000 	.word	0x08000000
 168:	02000000 	.word	0x02000000
 16c:	08047d00 	.word	0x08047d00
 170:	58000000 	.word	0x58000000
 174:	02000000 	.word	0x02000000
 178:	00047b00 	.word	0x00047b00
 17c:	00000000 	.word	0x00000000
 180:	58000000 	.word	0x58000000
 184:	5c000000 	.word	0x5c000000
 188:	01000000 	.word	0x01000000
 18c:	005c5d00 	.word	0x005c5d00
 190:	00600000 	.word	0x00600000
 194:	00020000 	.word	0x00020000
 198:	0060087d 	.word	0x0060087d
 19c:	01180000 	.word	0x01180000
 1a0:	00020000 	.word	0x00020000
 1a4:	0000047b 	.word	0x0000047b
 1a8:	00000000 	.word	0x00000000
	...
Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
   0:	0000001d 	andeq	r0, r0, sp, lsl r0
   4:	004b0002 	subeq	r0, fp, r2
   8:	00450000 	subeq	r0, r5, r0
   c:	00250000 	eoreq	r0, r5, r0
  10:	62670000 	rsbvs	r0, r7, #0	; 0x0
  14:	5f746f6f 	svcpl	0x00746f6f
  18:	6e69616d 	powvsez	f6, f1, #5.0
  1c:	00000000 	andeq	r0, r0, r0
  20:	00003200 	andeq	r3, r0, r0, lsl #4
  24:	90000200 	andls	r0, r0, r0, lsl #4
  28:	62000000 	andvs	r0, r0, #0	; 0x0
  2c:	25000000 	strcs	r0, [r0]
  30:	6c000000 	stcvs	0, cr0, [r0], {0}
  34:	695f6465 	ldmdbvs	pc, {r0, r2, r5, r6, sl, sp, lr}^
  38:	0074696e 	rsbseq	r6, r4, lr, ror #18
  3c:	00000039 	andeq	r0, r0, r9, lsr r0
  40:	5f64656c 	svcpl	0x0064656c
  44:	4d006e6f 	stcmi	14, cr6, [r0, #-444]
  48:	6c000000 	stcvs	0, cr0, [r0], {0}
  4c:	6f5f6465 	svcvs	0x005f6465
  50:	00006666 	andeq	r6, r0, r6, ror #12
  54:	42000000 	andmi	r0, r0, #0	; 0x0
  58:	02000000 	andeq	r0, r0, #0	; 0x0
  5c:	0000f200 	andeq	pc, r0, r0, lsl #4
  60:	00009f00 	andeq	r9, r0, r0, lsl #30
  64:	00002500 	andeq	r2, r0, r0, lsl #10
  68:	65726300 	ldrbvs	r6, [r2, #-768]!
  6c:	735f7461 	cmpvc	pc, #1627389952	; 0x61000000
  70:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
  74:	745f6e6f 	ldrbvc	r6, [pc], #3695	; 7c <_start-0x30007f84>
  78:	656c6261 	strbvs	r6, [ip, #-609]!
  7c:	00007600 	andeq	r7, r0, r0, lsl #12
  80:	756d6d00 	strbvc	r6, [sp, #-3328]!
  84:	616e655f 	cmnvs	lr, pc, asr r5
  88:	00656c62 	rsbeq	r6, r5, r2, ror #24
  8c:	0000008a 	andeq	r0, r0, sl, lsl #1
  90:	5f756d6d 	svcpl	0x00756d6d
  94:	74696e69 	strbtvc	r6, [r9], #-3689
  98:	00000000 	andeq	r0, r0, r0
  9c:	00001e00 	andeq	r1, r0, r0, lsl #28
  a0:	91000200 	tstls	r0, r0, lsl #4
  a4:	3a000001 	bcc	b0 <_start-0x30007f50>
  a8:	25000000 	strcs	r0, [r0]
  ac:	62000000 	andvs	r0, r0, #0	; 0x0
  b0:	6f747475 	svcvs	0x00747475
  b4:	6e695f6e 	cdpvs	15, 6, cr5, cr9, cr14, {3}
  b8:	00007469 	andeq	r7, r0, r9, ror #8
  bc:	2a000000 	bcs	c4 <_start-0x30007f3c>
  c0:	02000000 	andeq	r0, r0, #0	; 0x0
  c4:	0001cb00 	andeq	ip, r1, r0, lsl #22
  c8:	00006800 	andeq	r6, r0, r0, lsl #16
  cc:	00002500 	andeq	r2, r0, r0, lsl #10
  d0:	71726900 	cmnvc	r2, r0, lsl #18
  d4:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
  d8:	00390074 	eorseq	r0, r9, r4, ror r0
  dc:	61680000 	cmnvs	r8, r0
  e0:	656c646e 	strbvs	r6, [ip, #-1134]!
  e4:	746e695f 	strbtvc	r6, [lr], #-2399
  e8:	00000000 	andeq	r0, r0, r0
	...
Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	2e342043 	cdpcs	0, 3, cr2, cr4, cr3, {2}
   8:	00322e33 	eorseq	r2, r2, r3, lsr lr
   c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!
  10:	33532f65 	cmpcc	r3, #404	; 0x194
  14:	4d52412d 	ldfmie	f4, [r2, #-180]
  18:	32316c2f 	eorscc	r6, r1, #12032	; 0x2f00
  1c:	65746e69 	ldrbvs	r6, [r4, #-3689]!
  20:	70757272 	rsbsvc	r7, r5, r2, ror r2
  24:	616d0074 	smcvs	53252
  28:	632e6e69 	teqvs	lr, #1680	; 0x690
  2c:	6f626700 	svcvs	0x00626700
  30:	6d5f746f 	cfldrdvs	mvd7, [pc, #-444]
  34:	006e6961 	rsbeq	r6, lr, r1, ror #18
  38:	5f64656c 	svcpl	0x0064656c
  3c:	74696e69 	strbtvc	r6, [r9], #-3689
  40:	64656c00 	strbtvs	r6, [r5], #-3072
  44:	66666f5f 	uqsubaddxvs	r6, r6, pc
  48:	64656c00 	strbtvs	r6, [r5], #-3072
  4c:	6c00632e 	stcvs	3, cr6, [r0], {46}
  50:	6f5f6465 	svcvs	0x005f6465
  54:	6d6d006e 	stclvs	0, cr0, [sp, #-440]!
  58:	00632e75 	rsbeq	r2, r3, r5, ror lr
  5c:	5f756d6d 	svcpl	0x00756d6d
  60:	74696e69 	strbtvc	r6, [r9], #-3689
  64:	65726300 	ldrbvs	r6, [r2, #-768]!
  68:	735f7461 	cmpvc	pc, #1627389952	; 0x61000000
  6c:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
  70:	745f6e6f 	ldrbvc	r6, [pc], #3695	; 78 <_start-0x30007f88>
  74:	656c6261 	strbvs	r6, [ip, #-609]!
  78:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
  7c:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
  80:	6e676973 	mcrvs	9, 3, r6, cr7, cr3, {3}
  84:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
  88:	7000746e 	andvc	r7, r0, lr, ror #8
  8c:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
  90:	64617600 	strbtvs	r7, [r1], #-1536
  94:	6d007264 	sfmvs	f7, 4, [r0, #-400]
  98:	655f756d 	ldrbvs	r7, [pc, #-1389]	; fffffb33 <bss_end+0xcfff7653>
  9c:	6c62616e 	stfvse	f6, [r2], #-440
  a0:	75620065 	strbvc	r0, [r2, #-101]!
  a4:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
  a8:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
  ac:	75620074 	strbvc	r0, [r2, #-116]!
  b0:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
  b4:	6900632e 	stmdbvs	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
  b8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
  bc:	74707572 	ldrbtvc	r7, [r0], #-1394
  c0:	7600632e 	strvc	r6, [r0], -lr, lsr #6
  c4:	65756c61 	ldrbvs	r6, [r5, #-3169]!
  c8:	6e616800 	cdpvs	8, 6, cr6, cr1, cr0, {0}
  cc:	5f656c64 	svcpl	0x00656c64
  d0:	00746e69 	rsbseq	r6, r4, r9, ror #28
  d4:	5f717269 	svcpl	0x00717269
  d8:	74696e69 	strbtvc	r6, [r9], #-3689
	...
Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	5328203a 	teqpl	r8, #58	; 0x3a
   8:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
   c:	20797265 	rsbscs	r7, r9, r5, ror #4
  10:	202b2b47 	eorcs	r2, fp, r7, asr #22
  14:	6574694c 	ldrbvs	r6, [r4, #-2380]!
  18:	30303220 	eorscc	r3, r0, r0, lsr #4
  1c:	2d337138 	ldfcss	f7, [r3, #-224]!
  20:	20293237 	eorcs	r3, r9, r7, lsr r2
  24:	2e332e34 	mrccs	14, 1, r2, cr3, cr4, {1}
  28:	47000032 	smladxmi	r0, r2, r0, r0
  2c:	203a4343 	eorscs	r4, sl, r3, asr #6
  30:	756f5328 	strbvc	r5, [pc, #-808]!	; fffffd10 <bss_end+0xcfff7830>
  34:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
  38:	2b472079 	blcs	11c8224 <_start-0x2ee3fddc>
  3c:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
  40:	32206574 	eorcc	r6, r0, #486539264	; 0x1d000000
  44:	71383030 	teqvc	r8, r0, lsr r0
  48:	32372d33 	eorscc	r2, r7, #3264	; 0xcc0
  4c:	2e342029 	cdpcs	0, 3, cr2, cr4, cr9, {1}
  50:	00322e33 	eorseq	r2, r2, r3, lsr lr
  54:	43434700 	movtmi	r4, #14080	; 0x3700
  58:	5328203a 	teqpl	r8, #58	; 0x3a
  5c:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
  60:	20797265 	rsbscs	r7, r9, r5, ror #4
  64:	202b2b47 	eorcs	r2, fp, r7, asr #22
  68:	6574694c 	ldrbvs	r6, [r4, #-2380]!
  6c:	30303220 	eorscc	r3, r0, r0, lsr #4
  70:	2d337138 	ldfcss	f7, [r3, #-224]!
  74:	20293237 	eorcs	r3, r9, r7, lsr r2
  78:	2e332e34 	mrccs	14, 1, r2, cr3, cr4, {1}
  7c:	47000032 	smladxmi	r0, r2, r0, r0
  80:	203a4343 	eorscs	r4, sl, r3, asr #6
  84:	756f5328 	strbvc	r5, [pc, #-808]!	; fffffd64 <bss_end+0xcfff7884>
  88:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
  8c:	2b472079 	blcs	11c8278 <_start-0x2ee3fd88>
  90:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
  94:	32206574 	eorcc	r6, r0, #486539264	; 0x1d000000
  98:	71383030 	teqvc	r8, r0, lsr r0
  9c:	32372d33 	eorscc	r2, r7, #3264	; 0xcc0
  a0:	2e342029 	cdpcs	0, 3, cr2, cr4, cr9, {1}
  a4:	00322e33 	eorseq	r2, r2, r3, lsr lr
  a8:	43434700 	movtmi	r4, #14080	; 0x3700
  ac:	5328203a 	teqpl	r8, #58	; 0x3a
  b0:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
  b4:	20797265 	rsbscs	r7, r9, r5, ror #4
  b8:	202b2b47 	eorcs	r2, fp, r7, asr #22
  bc:	6574694c 	ldrbvs	r6, [r4, #-2380]!
  c0:	30303220 	eorscc	r3, r0, r0, lsr #4
  c4:	2d337138 	ldfcss	f7, [r3, #-224]!
  c8:	20293237 	eorcs	r3, r9, r7, lsr r2
  cc:	2e332e34 	mrccs	14, 1, r2, cr3, cr4, {1}
  d0:	Address 0x000000d0 is out of bounds.

